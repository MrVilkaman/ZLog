apply plugin: 'com.android.library'
apply from: '../maven_push.gradle'

apply plugin: 'jacoco'
jacoco {
    toolVersion "0.7.1.201405082137"
}

android {
    compileSdkVersion 22
    buildToolsVersion '22.0.1'

    buildTypes {
        debug {
            testCoverageEnabled = true
        }
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
        }
    }

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 22
        versionCode 3
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    androidTestCompile 'junit:junit:4.12'
    androidTestCompile('com.android.support.test:testing-support-lib:0.1') {
        exclude group: 'junit'  // junit:junit-dep conflicts with junit:unit
    }
}

apply plugin: "sonar-runner"

sonarRunner {
    sonarProperties {
        // can be also set on command line like -Dsonar.analysis.mode=incremental
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.analysis.mode", "incremental"
        property 'sonar.sourceEncoding', 'UTF-8'
        property 'sonar.language', 'java'
        property 'sonar.profile', 'sonar-project'
    }
}

def coverageSourceDirs = [
        '../src/main/java'
]

task jacocoTestReport(type:JacocoReport, dependsOn: "testDebug") {
    group = "Reporting"

    description = "Generate Jacoco coverage reports"

    classDirectories = fileTree(
            dir: '../app/build/intermediates/classes/debug',
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/*$ViewInjector*.*',
                       '**/BuildConfig.*',
                       '**/Manifest*.*']
    )

    additionalSourceDirs = files(coverageSourceDirs)
    sourceDirectories = files(coverageSourceDirs)
    executionData = files('../app/build/jacoco/testDebug.exec')

    reports {
        xml.enabled = true
        html.enabled = true
    }

}